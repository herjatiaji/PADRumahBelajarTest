// Generated by view binder compiler. Do not edit!
package com.pad1.padrumahbelajar.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.pad1.padrumahbelajar.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogCustomBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout backLl;

  @NonNull
  public final TextView content;

  @NonNull
  public final LinearLayout rebookingBackButtonLl;

  @NonNull
  public final TextView rebookingRecurringTv;

  @NonNull
  public final TextView rebookingSingleTv;

  @NonNull
  public final LinearLayout time;

  private DialogCustomBinding(@NonNull RelativeLayout rootView, @NonNull LinearLayout backLl,
      @NonNull TextView content, @NonNull LinearLayout rebookingBackButtonLl,
      @NonNull TextView rebookingRecurringTv, @NonNull TextView rebookingSingleTv,
      @NonNull LinearLayout time) {
    this.rootView = rootView;
    this.backLl = backLl;
    this.content = content;
    this.rebookingBackButtonLl = rebookingBackButtonLl;
    this.rebookingRecurringTv = rebookingRecurringTv;
    this.rebookingSingleTv = rebookingSingleTv;
    this.time = time;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogCustomBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogCustomBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_custom, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogCustomBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_ll;
      LinearLayout backLl = ViewBindings.findChildViewById(rootView, id);
      if (backLl == null) {
        break missingId;
      }

      id = R.id.content;
      TextView content = ViewBindings.findChildViewById(rootView, id);
      if (content == null) {
        break missingId;
      }

      id = R.id.rebooking_back_button_ll;
      LinearLayout rebookingBackButtonLl = ViewBindings.findChildViewById(rootView, id);
      if (rebookingBackButtonLl == null) {
        break missingId;
      }

      id = R.id.rebooking_recurring_tv;
      TextView rebookingRecurringTv = ViewBindings.findChildViewById(rootView, id);
      if (rebookingRecurringTv == null) {
        break missingId;
      }

      id = R.id.rebooking_single_tv;
      TextView rebookingSingleTv = ViewBindings.findChildViewById(rootView, id);
      if (rebookingSingleTv == null) {
        break missingId;
      }

      id = R.id.time;
      LinearLayout time = ViewBindings.findChildViewById(rootView, id);
      if (time == null) {
        break missingId;
      }

      return new DialogCustomBinding((RelativeLayout) rootView, backLl, content,
          rebookingBackButtonLl, rebookingRecurringTv, rebookingSingleTv, time);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
